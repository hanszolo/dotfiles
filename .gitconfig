[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true
[push]
	default = simple
[user]
	name = Hans Zhou
	email = hans@seekrecs.com
[alias]
	conf = "! vim ~/.gitconfig;"
	graph = log --graph --color --oneline
	# fancy log
	lg = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)'
	co = checkout
	cp = cherry-pick
	ci = commit -a
	uncommit = reset HEAD~
	# CommIt, Amend, Message
	ciam = commit -a -m
	# commit Add Amend
	aa = commit -a --amend
	# New Branch
	nb = checkout -b
	fp = push --force
	# Branch name
	b = rev-parse --abbrev-ref HEAD
	# Push and set upstream origin
	up = "! f() { git push --set-upstream origin `git b`; }; f;"
	alias = config --get-regexp alias
	# Delete Branch
	db = branch -D
	# Delete Remote Access Branch
	drab = push --delete origin
	redate = commit --amend --no-edit --date=now
	# ReDate and Push
	rdp = !git redate && git push -f
	# Pull Origin to Branch (git pull on a branch I don't have checked out)
	pob = "! f() { git fetch origin $1:$1; }; f"
	# git pull master when I'm on another branch
	refresh = "!git pob master; git pob dev; git pob staging;"
	noop = commit --amend --no-edit
	noop-push = !git noop && git push -f
	# Prune deleted branches
        pr = ! git fetch -p && git branch -v | grep -Fw '[gone]' | awk '{ print $1 }' | xargs -r git branch -D
[pull]
	rebase = false
[diff]
        algorithm = histogram
        colorMoved = dimmed-zebra
[core]
	commentchar = ";"
